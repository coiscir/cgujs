----

# Time #

Date/Time Manipulation

----

### Tests ###

> [Test Cases](../test/time.html)  

----

### Properties ###

> #### `Version` ####
>  
> > Formatting is based on the date built: `Y.MMDD`  
> > Where `Y` is the number of years since 2000.  

----

### Methods ###

> #### `abs` | `utc` ####
>  
> > **Description**: Absolute Date creation.  
> >  
> > **Return**: `<Number>`  
> >  
> > **Syntax**: `Time.abs([yr [, mn [, dy [, hr [, mi [, sc [, ms]]]]]]])`  
> >  
> > > yr = year `(0 - 9999)`  
> > > mn = month `(0 - 11)`  
> > > dy = day `(1 - 31)`  
> > > hr = hour `(0 - 23)`  
> > > mi = minute `(0 - 59)`  
> > > sc = second `(0 - 59)`  
> > > ms = milliseconds `(0 - 999)`  
> > >  
> > > (All parameters are optional. Default is '0/0/0000 00:00:00'.)  
> >  
> > **Examples**:  
> >  
> > > `Time.abs();`  
> > > `Time.abs(0, 0, 1, 0, 0, 0, 0);`  
> > > `Time.abs(9999, 11, 31, 23, 59, 59, 999)`  

> #### `php` | `utcphp` ####
>  
> > **Description**: PHP date() formatting for local time.  
> >  
> > **Return**: `<String>`  
> >  
> > > <undefined>: `time` is invalid.
> > >  
> > > <null>: Out of range. Range is: Jan 1, 0000 to Dec 31, 9999.  
> >  
> > **Syntax**: `Time.php(format [, time])`  
> >  
> > > **_format_** `<String>`: String to be parsed.  
> > >  
> > > **_time_** `<Mixed>`: A date value: <Date>, <Number>, or <String>. (optional)  
> >  
> > **Examples**:  
> >  
> > > `Time.php("c");`  
> > > `Time.php("Y-m-d\\Th:i:sP");`  
> > > `Time.php("r", (new Date().getTime() - 3600 * 1000));`  
> > > `Time.php("D, d M, Y h:i:s O", (new Date().getTime() - 3600 * 1000));`  
> > > `Time.utcphp('"Y-m-d\\Th:i:s\\Z"') // JSON-formatted`  

----
