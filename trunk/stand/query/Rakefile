require 'rake'
require 'erb'

################################################################################
# Prepare
####
ROOT = File.expand_path(File.dirname(__FILE__))
LIB  = File.join(ROOT, 'lib')
SRC  = File.join(ROOT, 'src')

START = 'anchor.js'
FINAL = File.join(LIB, "#{File.split(ROOT)[1]}.js")

################################################################################
# Module
####
module Build
  module Utilities
    def jsmin(*filenames)
      filenames.map {|filename| File.expand_path(filename)}
      filenames.map {|filename| (`ruby #{File.join(ROOT, 'jsmin.rb')} < #{filename}`).strip}.join("\n")
    end
    
    def include(*filenames)
      filenames.map {|filename| Reader.new(filename).to_s.strip}.join("\n\n")
    end
  end
  
  class Reader
    include Utilities
    
    def initialize(filename)
      @filename = File.expand_path(filename)
      @template = ERB.new(IO.read(@filename), nil, '%')
    end
    
    def to_s
      @template.result(binding).gsub(/[ \t]+$/m, '').strip
    end
  end
end

################################################################################
# Tasks
####
task :default => [:clean, :build]

task :clean do
  print "\n== Clean ==\n"
  if File.exist? FINAL
    File.delete FINAL
    print " " + FINAL + "\n"
  end
end

task :build do
  print "\n== Build ==\n"
  Dir.chdir(SRC) do
    File.open(FINAL, 'w+') do |lib|
      lib << Build::Reader.new(START)
      print " " + FINAL + "\n"
    end
  end
end
