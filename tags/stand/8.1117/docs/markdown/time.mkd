----

# Time #

Date/Time Manipulation

----

### Tests ###

> [Test Cases](../test/time.html)  
> [Languages](../test/time.lang.html)  

----

### Properties ###

> #### `Version` ####
>  
> > Formatting is based on the date built: `Y.MMDD`  
> > Where `Y` is the number of years since 2000.  

----

### Methods ###

> #### `abs` | `utc` ####
>  
> > **Description**: Absolute Date creation.  
> >  
> > **Return**: `<Number>`  
> >  
> > **Syntax**: `Time.abs([yr [, mn [, dy [, hr [, mi [, sc [, ms]]]]]]])`  
> >  
> > > `yr` = year `(0 - 9999)`  
> > > `mn` = month `(0 - 11)`  
> > > `dy` = day `(1 - 31)`  
> > > `hr` = hour `(0 - 23)`  
> > > `mi` = minute `(0 - 59)`  
> > > `sc` = second `(0 - 59)`  
> > > `ms` = milliseconds `(0 - 999)`  
> > >  
> > > (All parameters are optional. Default is `'0000-00-01 00:00:00'`.)  
> >  
> > **Examples**:  
> >  
> > > `Time.abs()`  
> > > `Time.abs(0, 0, 1, 0, 0, 0, 0)`  
> > > `Time.abs(9999, 11, 31, 23, 59, 59, 999)`  

> #### `lang` ####
>  
> > **Description**: Get current language in-use.  
> >  
> > **Return**: `<String>`  
> >  
> > **Syntax**: `Time.lang()`  
> >  
> > **Examples**:  
> >  
> > > `Time.lang() //=> "en"`  

> #### `langDetect` ####
>  
> > **Description**: Get user, browser, or system languagee.  
> >  
> > **Return**: `<String>`  
> >  
> > **Syntax**: `Time.langDetect()`  
> >  
> > **Examples**:  
> >  
> > > `Time.langDetect() //=> "en"`  

> #### `langList` ####
>  
> > **Description**: List supported languages.  
> >  
> > **Return**: `<Array>`  
> >  
> > **Syntax**: `Time.langList()`  
> >  
> > **Examples**:  
> >  
> > > `Time.langList() //=> ["en", "es"]`  

> #### `langReset` ####
>  
> > **Description**: Reset in-use language to configured default.  
> >  
> > **Return**: `<Boolean>`: Success.  
> >  
> > **Syntax**: `Time.langReset()`  

> #### `langSet` ####
>  
> > **Description**: Set in-use language.  
> >  
> > **Return**: `<Boolean>`: Success.  
> >  
> > **Syntax**: `Time.langSet(lang)`  
> >  
> > > **_lang_** `<String>`: Language to use.  
> >  
> > **Examples**:  
> >  
> > > `Time.langSet("en") //=> true`  
> > > `Time.langSet("fr") //=> false`  

> #### `langSetDetect` ####
>  
> > **Description**: Set in-use language to detected language.  
> >  
> > **Return**: `<Boolean>`: Success.  
> >  
> > **Syntax**: `Time.langSetDetect()`  

> #### `phpdate` | `phputc` ####
>  
> > **Description**: PHP `date()` formatting.  
> >  
> > **Note**: `phpdate` and `phputc` are English-only.
> >  
> > **Return**: `<String>`  
> >  
> > > `<undefined>`: `time` is invalid.
> > >  
> > > `<null>`: Out of range. Range is: Jan 1, 0000 to Dec 31, 9999.  
> >  
> > **Syntax**: `Time.phpdate(format [, time])`  
> >  
> > > **_format_** `<String>`: String to be parsed.  
> > >  
> > > >  `d` - Day of the month, 2 digits with leading zeros `(01 - 31)`  
> > > >  `D` - A textual representation of a day, three letters `(Mon - Sun)`  
> > > >  `j` - Day of the month without leading zeros `(1 - 31)`  
> > > >  `l` - A full textual representation of the day of week `(Sunday - Saturday)`  
> > > >  `N` - ISO-8601 numeric representation of the day of the week `(1 - 7)`  
> > > >  `S` - English ordinal suffix for the day of the month `(st, nd, rd, th)`  
> > > >  `w` - Numeric representation of the day of the week `(0 - 6)`  
> > > >  `z` - The day of the year `(0 - 366)`  
> > > >  
> > > >  `W` - ISO-8601 week number of year, weeks starting on Monday `(00 - 53)`  
> > > >  
> > > >  `F` - A full textual representation of a month. `(January - December)`  
> > > >  `m` - Numeric representation of a month, with leading zeros. `(01 - 12)`  
> > > >  `M` - A short textual representation of a month. `(Jan - Dec)`  
> > > >  `n` - Numeric representation of a month, without leading zeros. `(1 - 12)`  
> > > >  `t` - Number of days in the given month. `(28 - 31)`  
> > > >  
> > > >  `L` - Whether it's a leap year. `(0 or 1)`  
> > > >  `O` - ISO-8601 year number.  
> > > >  `y` - A full numeric representation of a year, 4 digits.  
> > > >  `Y` - A two digit representation of a year.  
> > > >  
> > > >  `a` - Lowercase meridiem. `(am or pm)`  
> > > >  `A` - Uppercase meridiem. `(AM or PM)`  
> > > >  `B` - Swatch Internet Time. `(000 - 999)`  
> > > >  `g` - 12-hour without leading zeros. `(1 - 12)`  
> > > >  `G` - 24-hour without leading zeros. `(0 - 23)`  
> > > >  `h` - 12-hour with leading zeros. `(01 - 12)`  
> > > >  `H` - 24-hour with leading zeros. `(00 - 23)`  
> > > >  `i` - Minutes with leading zeros. `(00 - 59)`  
> > > >  `s` - Seconds with leading zeros. `(00 - 59)`  
> > > >  `u` - Microseconds  
> > > >  
> > > >  `e` - [**unsupported**] Timezone identifier.  
> > > >  `I` - Whether daylight savings time. `(0 or 1)`  
> > > >  `O` - Difference to Greenwich time. `(e.g. +0200)`  
> > > >  `P` - Difference to Greenwich time. `(e.g. +02:00)`  
> > > >  `T` - [**unsupported**] Timezone abbreviation.  
> > > >  `Z` - Timezone offset is seconds. `(-43200 - 50400)`  
> > > >  
> > > >  `c` - ISO-8601 date. `(e.g. 2004-02-12T15:19:21+00:00)`  
> > > >  `r` - RFC 2822 date. `(e.g. Thu, 21 Dec 2000 16:01:07 +0200)`  
> > > >  `U` - Seconds since Unix Epoch.  
> > >  
> > > **_time_** `<Mixed>`: A date value: `<Date>`, `<Number>`, or `<String>`. (optional)  
> >  
> > **Examples**:  
> >  
> > > `Time.phpdate("c")`  
> > > `Time.phpdate("Y-m-d\\\\Th:i:sP")`  
> > > `Time.phpdate("r")`  
> > > `Time.phpdate("D, d M, Y h:i:s O")`  
> > > `Time.phputc('"Y-m-d\\\\Th:i:s\\\\Z"') // JSON-formatted`  

> #### `strftime` | `strfutc` ####
>  
> > (**Work-in-progress**)  
> >  
> > **Description**: POSIX date formatting.  
> >  
> > **Return**: `<String>`  
> >  
> > > `<undefined>`: `time` is invalid.
> > >  
> > > `<null>`: Out of range. Range is: Jan 1, 0000 to Dec 31, 9999.  
> >  
> > **Syntax**: `Time.strftime(format [, time])`  
> >  
> > > **_format_** `<String>`: String to be parsed.  
> > >  
> > > >  `%a` - Abbreviated week. `(Sun - Sat)`  
> > > >  `%A` - Full week. `(Sunday - Saturday)`  
> > > >  `%b` - Abbreviated month. `(Jan - Dec)`  
> > > >  `%B` - Full month. `(January - December)`  
> > > >  `%c` - Locale date and time. (based on `Date#toLocaleString`)  
> > > >  `%C` - Century. `(year / 100)`  
> > > >  `%d` - Day of the month with leading zeros.  
> > > >  `%D` - Equivalent to `"%m/%d/%y"`.  
> > > >  `%e` - Day of the month with leading spaces.  
> > > >  `%E` - [**unsupported**] POSIX locale extensions.  
> > > >  `%F` - Equivalent to `"%Y-%m-%d"`.  
> > > >  `%g` - 2-digit year containing majority of the Monday-start week.  
> > > >  `%G` - 4-digit year containing majority of the Monday-start week.  
> > > >  `%h` - Same as `%b`.  
> > > >  `%H` - Hour of 24-hour clock with leading zeros.  
> > > >  `%I` - Hour of 12-hour clock with leading zeros.  
> > > >  `%j` - Day of the year with leading zeros. `(000 - 366)`  
> > > >  `%k` - Hour of 24-hour clock with leading spaces.  
> > > >  `%l` - Hour of 12-hour clock with leading spaces.  
> > > >  `%m` - Numeric month with leading zeros.  
> > > >  `%M` - Minutes with leading spaces.  
> > > >  `%n` - newline.  
> > > >  `%N` - Milliseconds with leading zeros.  
> > > >  `%O` - [**unsupported**] POSIX locale extensions.  
> > > >  `%p` - Uppercase ante meridiem or post meridiem.  
> > > >  `%P` - Lowercase ante meridiem or post meridiem.  
> > > >  `%r` - Equivalent to `"%I:%M:%S %p"`.  
> > > >  `%R` - Equivalent to `"%H:%M"`.  
> > > >  `%s` - Seconds since Unix Epoch.  
> > > >  `%S` - Seconds with leading zeros.  
> > > >  `%t` - tab.  
> > > >  `%T` - Equivalent to `"%H:%M:%S"`.  
> > > >  `%u` - Day of the week. `(1 - 7 <=> Mon - Sun)`  
> > > >  `%U` - Week number of the year, Sunday-start, with leading zeros.  
> > > >  `%v` - Equivalent to `"%e-%b-%Y"`.  
> > > >  `%V` - Week number of `%G` year, Monday-start, with leading zeros.  
> > > >  `%w` - Day of the week. `(0 - 6 <=> Sun - Sat)`  
> > > >  `%W` - Week number of the year, Monday-start, with leading zeros.  
> > > >  `%x` - Locale date. (based on `Date#toLocaleDateString`)  
> > > >  `%X` - Locale time. (based on `Date#toLocaleTimeString`)  
> > > >  `%y` - 2-digit year.  
> > > >  `%Y` - 4-digit year.  
> > > >  `%z` - Offset from UTC. `(e.g. -0600)`  
> > > >  `%Z` - [**unsupported**] Timezone name.  
> > > >  `%%` - Percent sign.  
> > >  
> > > **_time_** `<Mixed>`: A date value: `<Date>`, `<Number>`, or `<String>`. (optional)  

----
