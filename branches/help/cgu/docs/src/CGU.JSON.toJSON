Create a JSON-formatted string from an object.

----

### Syntax ###

>     CGU.toJSON(input [, strict])
> {: class=prettyprint}
>
> > **`input`** `<Mixed>`: An object to be stringified.
> >
> > **`strict`** `<Boolean>`: Only create [JSON.org](http://json.org) specified JSON strings.

### Return ###

> `<String>`: The JSON-formatted string representing the object.

----

### Example ###

>     CGU.toJSON({key: "value", foo: "bar", red: 24.42});        //=> {foo: "bar", key: "value", red: 24.42}
>     CGU.toJSON({key: "value", foo: "bar", red: 24.42}, true);  //=> {"foo": "bar", "key": "value", "red": 24.42}
>     
>     // Time.fromTime on all Date objects
>     CGU.toJSON(new Date(2008, 11, 31, 23, 59, 59))        //=> ["2009-01-01T05:59:59.000Z"]  // US/Central
>     CGU.toJSON(new Date(2008, 11, 31, 23, 59, 59), true)  //=> ["2009-01-01T05:59:59.000Z"]  // US/Central
>     
>     // ignores Function and RegExp Objects
>     CGU.toJSON([function(){}, /pattern/]);  //=> []
> {: class=prettyprint}
{: class=codebox}

----
